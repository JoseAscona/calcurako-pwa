{"version":3,"sources":["serviceWorkerRegistration.js","reportWebVitals.js","components/titles.js","components/playerOne.js","components/playerTwo.js","components/playerThree.js","components/container.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","titles","className","playerOne","id","type","playerTwo","playerThree","container","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.1f8dbe73.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nfunction titles() {\r\n    return (\r\n           <div className=\"calcurako-item\">\r\n               <button>Players</button>\r\n               <button>Corte</button>\r\n               <button>Muerto</button>\r\n               <button>Comodin</button>\r\n               <button>Canasta Pura</button>\r\n               <button>Canasta Impura</button>\r\n               <button>Numero 1</button>\r\n               <button>Numeros 3 al 7</button>\r\n               <button>Numeros 8 al 13</button>\r\n               <button>Subtotal</button>\r\n           </div>\r\n    )\r\n}\r\n\r\nexport default titles;\r\n","import React from 'react';\r\n\r\nfunction playerOne() {\r\n    return (\r\n            <div className=\"calcurako-item\">\r\n                <button id=\"Chipi\">Chipi</button>\r\n                <input type= \"number\" id=\"corte1\"></input>\r\n                <input type= \"number\" id=\"muerto1\"></input>\r\n                <input type= \"number\" id=\"comodin1\"></input>\r\n                <input type= \"number\" id=\"canastapura1\"></input>\r\n                <input type= \"number\" id=\"canastaimpura1\"></input>\r\n                <input type= \"number\" id=\"primero1\"></input>\r\n                <input type= \"number\" id=\"segundo1\"></input>\r\n                <input type= \"number\" id=\"chicas1\"></input>\r\n                <input type= \"number\" id=\"grandes1\"></input>\r\n                <span id=\"subtotal1\"></span>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default playerOne;\r\n","import React from 'react';\r\n\r\nfunction playerTwo() {\r\n    return (\r\n            <div className=\"calcurako-item\">\r\n                <button id=\"Chipi\">Guille</button>\r\n                <input type= \"number\" id=\"corte1\"></input>\r\n                <input type= \"number\" id=\"muerto1\"></input>\r\n                <input type= \"number\" id=\"comodin1\"></input>\r\n                <input type= \"number\" id=\"canastapura1\"></input>\r\n                <input type= \"number\" id=\"canastaimpura1\"></input>\r\n                <input type= \"number\" id=\"primero1\"></input>\r\n                <input type= \"number\" id=\"segundo1\"></input>\r\n                <input type= \"number\" id=\"chicas1\"></input>\r\n                <input type= \"number\" id=\"grandes1\"></input>\r\n                <span id=\"subtotal1\"></span>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default playerTwo;\r\n","import React from 'react';\r\n\r\nfunction playerThree() {\r\n    return (\r\n            <div className=\"calcurako-item\">\r\n                <button id=\"Chipi\">Joey</button>\r\n                <input type= \"number\" id=\"corte1\"></input>\r\n                <input type= \"number\" id=\"muerto1\"></input>\r\n                <input type= \"number\" id=\"comodin1\"></input>\r\n                <input type= \"number\" id=\"canastapura1\"></input>\r\n                <input type= \"number\" id=\"canastaimpura1\"></input>\r\n                <input type= \"number\" id=\"primero1\"></input>\r\n                <input type= \"number\" id=\"segundo1\"></input>\r\n                <input type= \"number\" id=\"chicas1\"></input>\r\n                <input type= \"number\" id=\"grandes1\"></input>\r\n                <span id=\"subtotal1\"></span>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default playerThree;\r\n","import React from 'react'\r\nimport Titles from './titles'\r\nimport PlayerOne from './playerOne'\r\nimport PlayerTwo from './playerTwo'\r\nimport PlayerThree from './playerThree'\r\n\r\nfunction container() {\r\n    return (\r\n        <div className=\"calcurako\">\r\n            <Titles />\r\n            <PlayerOne />\r\n            <PlayerTwo />\r\n            <PlayerThree />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default container\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport Container from './components/container';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Container />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}